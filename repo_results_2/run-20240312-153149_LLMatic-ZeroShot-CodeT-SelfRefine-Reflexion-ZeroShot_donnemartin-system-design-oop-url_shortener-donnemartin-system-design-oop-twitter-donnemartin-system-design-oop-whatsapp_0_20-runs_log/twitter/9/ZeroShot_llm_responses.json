[{"choices": [{"content_filter_results": {}, "finish_reason": "stop", "index": 0, "message": {"content": null, "function_call": {"arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom user import User\\nfrom post import Post\\n\\napp = Flask(__name__)\\n\\nusers = {}\\nposts = {}\\n\\n@app.route('/register', methods=['POST'])\\ndef register():\\n\\tdata = request.get_json()\\n\\tuser = User(**data)\\n\\tusers[user.email] = user\\n\\treturn jsonify(user.to_dict()), 201\\n\\n@app.route('/login', methods=['POST'])\\ndef login():\\n\\tdata = request.get_json()\\n\\temail = data.get('email')\\n\\tpassword = data.get('password')\\n\\tuser = users.get(email)\\n\\tif not user or not user.check_password(password):\\n\\t\\treturn jsonify({'message': 'Invalid email or password'}), 401\\n\\treturn jsonify(user.to_dict()), 200\\n\\n@app.route('/post', methods=['POST'])\\ndef create_post():\\n\\tdata = request.get_json()\\n\\tpost = Post(**data)\\n\\tposts[post.id] = post\\n\\treturn jsonify(post.to_dict()), 201\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"user.py\",\n      \"file_contents\": \"from dataclasses import dataclass\\nfrom werkzeug.security import generate_password_hash, check_password_hash\\n\\n@dataclass\\nclass User:\\n\\temail: str\\n\\tusername: str\\n\\tpassword: str\\n\\tbio: str = ''\\n\\twebsite: str = ''\\n\\tlocation: str = ''\\n\\tis_private: bool = False\\n\\n\\tdef __post_init__(self):\\n\\t\\tself.password = generate_password_hash(self.password)\\n\\n\\tdef check_password(self, password):\\n\\t\\treturn check_password_hash(self.password, password)\\n\\n\\tdef to_dict(self):\\n\\t\\treturn {\\n\\t\\t\\t'email': self.email,\\n\\t\\t\\t'username': self.username,\\n\\t\\t\\t'bio': self.bio,\\n\\t\\t\\t'website': self.website,\\n\\t\\t\\t'location': self.location,\\n\\t\\t\\t'is_private': self.is_private\\n\\t\\t}\"\n    },\n    {\n      \"file_path\": \"post.py\",\n      \"file_contents\": \"from dataclasses import dataclass\\nfrom datetime import datetime\\nimport uuid\\n\\n@dataclass\\nclass Post:\\n\\tuser_email: str\\n\\tcontent: str\\n\\timage_url: str = ''\\n\\tid: str = str(uuid.uuid4())\\n\\tcreated_at: datetime = datetime.now()\\n\\n\\tdef to_dict(self):\\n\\t\\treturn {\\n\\t\\t\\t'id': self.id,\\n\\t\\t\\t'user_email': self.user_email,\\n\\t\\t\\t'content': self.content,\\n\\t\\t\\t'image_url': self.image_url,\\n\\t\\t\\t'created_at': self.created_at.isoformat()\\n\\t\\t}\"\n    }\n  ]\n}", "name": "write_files"}, "role": "assistant"}}], "created": 1710341260, "id": "chatcmpl-92KBIuaSjh83snq2Gv6a49bzHATgL", "model": "gpt-4", "object": "chat.completion", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "system_fingerprint": null, "usage": {"completion_tokens": 659, "prompt_tokens": 1507, "total_tokens": 2166}}]