[{"id": "chatcmpl-8KhMxQbnMVDwG1ukeYJqktDVM0jjn", "object": "chat.completion", "created": 1699943963, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom werkzeug.security import generate_password_hash, check_password_hash\\nimport jwt\\nimport datetime\\nfrom functools import wraps\\n\\napp = Flask(__name__)\\n\\nusers = {}\\nposts = {}\\n\\n@app.route('/register', methods=['POST'])\\ndef register():\\n\\tdata = request.get_json()\\n\\tusername = data['username']\\n\\temail = data['email']\\n\\tpassword = data['password']\\n\\tif email in users:\\n\\t\\treturn jsonify({'message': 'User already exists'}), 400\\n\\tusers[email] = {\\n\\t\\t'username': username,\\n\\t\\t'password': generate_password_hash(password),\\n\\t\\t'profile': {},\\n\\t\\t'posts': [],\\n\\t\\t'following': [],\\n\\t\\t'followers': [],\\n\\t\\t'messages': [],\\n\\t\\t'notifications': []\\n\\t}\\n\\treturn jsonify({'message': 'Registered successfully'}), 200\\n\\n@app.route('/login', methods=['POST'])\\ndef login():\\n\\tdata = request.get_json()\\n\\temail = data['email']\\n\\tpassword = data['password']\\n\\tif email not in users or not check_password_hash(users[email]['password'], password):\\n\\t\\treturn jsonify({'message': 'Invalid credentials'}), 400\\n\\ttoken = jwt.encode({'user': email, 'exp': datetime.datetime.utcnow() + datetime.timedelta(minutes=30)}, app.config['SECRET_KEY'])\\n\\treturn jsonify({'token': token.decode('UTF-8')}), 200\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport requests\\nimport random\\nimport string\\n\\nbase_url = 'http://localhost:5000'\\n\\n@pytest.fixture\\ndef random_user():\\n\\treturn {\\n\\t\\t'username': ''.join(random.choices(string.ascii_letters, k=10)),\\n\\t\\t'email': f\\\"{''.join(random.choices(string.ascii_letters, k=10))}@gmail.com\\\",\\n\\t\\t'password': ''.join(random.choices(string.ascii_letters, k=10))\\n\\t}\\n\\n@pytest.fixture\\ndef registered_user(random_user):\\n\\trequests.post(f'{base_url}/register', json=random_user)\\n\\treturn random_user\\n\\n@pytest.fixture\\ndef logged_in_user(registered_user):\\n\\tresponse = requests.post(f'{base_url}/login', json=registered_user)\\n\\treturn response.json()['token']\\n\\n\\ndef test_register_user(random_user):\\n\\tresponse = requests.post(f'{base_url}/register', json=random_user)\\n\\tassert response.status_code == 200\\n\\tassert response.json()['message'] == 'Registered successfully'\\n\\n\\ndef test_login_user(registered_user):\\n\\tresponse = requests.post(f'{base_url}/login', json=registered_user)\\n\\tassert response.status_code == 200\\n\\tassert 'token' in response.json()\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 2154, "completion_tokens": 686, "total_tokens": 2840}}]