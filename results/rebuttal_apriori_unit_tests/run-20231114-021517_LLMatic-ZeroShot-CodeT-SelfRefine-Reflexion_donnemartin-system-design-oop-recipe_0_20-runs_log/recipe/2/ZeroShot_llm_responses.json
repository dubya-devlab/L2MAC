[{"id": "chatcmpl-8KkbGRTdIn2gruJwt2jiYWQpyhYin", "object": "chat.completion", "created": 1699956382, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"recipe_platform/models.py\",\n      \"file_contents\": \"from dataclasses import dataclass\\n\\n\\n@dataclass\\nclass User:\\n\\tid: int\\n\\tusername: str\\n\\tpassword: str\\n\\tfavorites: list\\n\\tfollowing: list\\n\\tsubmitted_recipes: list\\n\\n\\tdef change_password(self, new_password):\\n\\t\\tself.password = new_password\\n\\n\\tdef save_favorite(self, recipe_id):\\n\\t\\tself.favorites.append(recipe_id)\\n\\n\\tdef follow(self, user_id):\\n\\t\\tself.following.append(user_id)\\n\\n\\n@dataclass\\nclass Admin(User):\\n\\tdef edit_recipe(self, recipe_id, new_data):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\tpass\\n\\n\\tdef remove_recipe(self, recipe_id):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\tpass\\n\\n\\tdef get_site_statistics(self):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\treturn {'total_users': 0, 'total_recipes': 0}\\n\\n\\n@dataclass\\nclass Recipe:\\n\\tid: int\\n\\ttitle: str\\n\\tingredients: list\\n\\tinstructions: str\\n\\timage: str\\n\\tcategories: list\\n\\n\\tdef is_valid(self):\\n\\t\\treturn bool(self.title and self.ingredients and self.instructions and self.image)\\n\\n\\tdef has_valid_categories(self):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\treturn True\\n\\n\\n@dataclass\\nclass RecipeRating:\\n\\trecipe_id: int\\n\\trating: int\\n\\n\\t@staticmethod\\n\\tdef get_average_rating(recipe_id):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\treturn 5.0\\n\\n\\n@dataclass\\nclass RecipeReview:\\n\\trecipe_id: int\\n\\treview: str\\n\\n\\t@staticmethod\\n\\tdef get_reviews(recipe_id):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\treturn []\\n\\n\\n@dataclass\\nclass RecipeSharing:\\n\\trecipe_id: int\\n\\tplatform: str\\n\\n\\t@staticmethod\\n\\tdef share(recipe_id, platform):\\n\\t\\t# This is a placeholder. In a real system, this would interact with a database.\\n\\t\\treturn True\"\n    },\n    {\n      \"file_path\": \"test_recipe_platform/test_models.py\",\n      \"file_contents\": \"import pytest\\nimport random\\nimport string\\n\\nfrom recipe_platform.models import User, Admin, Recipe, RecipeRating, RecipeReview, RecipeSharing\\n\\n\\ndef test_user_creation():\\n\\tuser = User(id=1, username='user1', password='pass1', favorites=[], following=[], submitted_recipes=[])\\n\\tassert user.username == 'user1'\\n\\n\\ndef test_admin_creation():\\n\\tadmin = Admin(id=1, username='admin1', password='pass1', favorites=[], following=[], submitted_recipes=[])\\n\\tassert admin.username == 'admin1'\\n\\n\\ndef test_recipe_creation():\\n\\trecipe = Recipe(id=1, title='recipe1', ingredients=['ingredient1'], instructions='instructions1', image='image1', categories=['category1'])\\n\\tassert recipe.title == 'recipe1'\\n\\n\\ndef test_recipe_rating_creation():\\n\\trating = RecipeRating(recipe_id=1, rating=5)\\n\\tassert rating.rating == 5\\n\\n\\ndef test_recipe_review_creation():\\n\\treview = RecipeReview(recipe_id=1, review='review1')\\n\\tassert review.review == 'review1'\\n\\n\\ndef test_recipe_sharing_creation():\\n\\tsharing = RecipeSharing(recipe_id=1, platform='platform1')\\n\\tassert sharing.platform == 'platform1'\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 2549, "completion_tokens": 884, "total_tokens": 3433}}]