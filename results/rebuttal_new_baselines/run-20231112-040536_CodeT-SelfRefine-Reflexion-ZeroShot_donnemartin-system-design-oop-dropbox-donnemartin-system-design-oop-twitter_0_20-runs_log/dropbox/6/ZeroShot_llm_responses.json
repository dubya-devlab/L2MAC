[{"id": "chatcmpl-8JzawR8bOtBa9Cf9aamNV9fwsFRsa", "object": "chat.completion", "created": 1699775694, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\nimport user_management\\nimport file_management\\nimport file_sharing\\n\\napp = Flask(__name__)\\n\\n@app.route('/register', methods=['POST'])\\ndef register():\\n\\tdata = request.get_json()\\n\\treturn jsonify(user_management.register(data))\\n\\n@app.route('/login', methods=['POST'])\\ndef login():\\n\\tdata = request.get_json()\\n\\treturn jsonify(user_management.login(data))\\n\\n@app.route('/forgot_password', methods=['POST'])\\ndef forgot_password():\\n\\tdata = request.get_json()\\n\\treturn jsonify(user_management.forgot_password(data))\\n\\n@app.route('/profile', methods=['GET'])\\ndef profile():\\n\\tdata = request.get_json()\\n\\treturn jsonify(user_management.profile(data))\\n\\n@app.route('/change_password', methods=['POST'])\\ndef change_password():\\n\\tdata = request.get_json()\\n\\treturn jsonify(user_management.change_password(data))\\n\\n@app.route('/upload_file', methods=['POST'])\\ndef upload_file():\\n\\tdata = request.get_json()\\n\\treturn jsonify(file_management.upload_file(data))\\n\\n@app.route('/download_file', methods=['GET'])\\ndef download_file():\\n\\tdata = request.get_json()\\n\\treturn jsonify(file_management.download_file(data))\\n\\n@app.route('/organize_file', methods=['POST'])\\ndef organize_file():\\n\\tdata = request.get_json()\\n\\treturn jsonify(file_management.organize_file(data))\\n\\n@app.route('/version_file', methods=['GET'])\\ndef version_file():\\n\\tdata = request.get_json()\\n\\treturn jsonify(file_management.version_file(data))\\n\\n@app.route('/share_file', methods=['POST'])\\ndef share_file():\\n\\tdata = request.get_json()\\n\\treturn jsonify(file_sharing.share_file(data))\\n\\n@app.route('/shared_folder', methods=['POST'])\\ndef shared_folder():\\n\\tdata = request.get_json()\\n\\treturn jsonify(file_sharing.shared_folder(data))\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"user_management.py\",\n      \"file_contents\": \"from dataclasses import dataclass\\n\\n@dataclass\\nclass User:\\n\\tname: str\\n\\temail: str\\n\\tpassword: str\\n\\tprofile_picture: str\\n\\tstorage_used: int\\n\\tstorage_remaining: int\\n\\nusers = {}\\n\\n\\ndef register(data):\\n\\tuser = User(**data)\\n\\tusers[user.email] = user\\n\\treturn {'message': 'User registered successfully'}\\n\\ndef login(data):\\n\\tuser = users.get(data['email'])\\n\\tif user and user.password == data['password']:\\n\\t\\treturn {'message': 'Login successful'}\\n\\treturn {'message': 'Invalid email or password'}\\n\\ndef forgot_password(data):\\n\\tuser = users.get(data['email'])\\n\\tif user:\\n\\t\\tuser.password = data['new_password']\\n\\t\\treturn {'message': 'Password reset successful'}\\n\\treturn {'message': 'User not found'}\\n\\ndef profile(data):\\n\\tuser = users.get(data['email'])\\n\\tif user:\\n\\t\\treturn user.__dict__\\n\\treturn {'message': 'User not found'}\\n\\ndef change_password(data):\\n\\tuser = users.get(data['email'])\\n\\tif user and user.password == data['old_password']:\\n\\t\\tuser.password = data['new_password']\\n\\t\\treturn {'message': 'Password changed successfully'}\\n\\treturn {'message': 'Invalid email or old password'}\"\n    },\n    {\n      \"file_path\": \"file_management.py\",\n      \"file_contents\": \"from dataclasses import dataclass\\n\\n@dataclass\\nclass File:\\n\\tname: str\\n\\ttype: str\\n\\tsize: int\\n\\tversions: list\\n\\nfiles = {}\\n\\n\\ndef upload_file(data):\\n\\tfile = File(**data)\\n\\tfiles[file.name] = file\\n\\treturn {'message': 'File uploaded successfully'}\\n\\ndef download_file(data):\\n\\tfile = files.get(data['name'])\\n\\tif file:\\n\\t\\treturn file.__dict__\\n\\treturn {'message': 'File not found'}\\n\\ndef organize_file(data):\\n\\tfile = files.get(data['name'])\\n\\tif file:\\n\\t\\tfile.name = data['new_name']\\n\\t\\treturn {'message': 'File organized successfully'}\\n\\treturn {'message': 'File not found'}\\n\\ndef version_file(data):\\n\\tfile = files.get(data['name'])\\n\\tif file:\\n\\t\\treturn {'versions': file.versions}\\n\\treturn {'message': 'File not found'}\"\n    },\n    {\n      \"file_path\": \"file_sharing.py\",\n      \"file_contents\": \"from dataclasses import dataclass\\n\\n@dataclass\\nclass SharedFile:\\n\\tname: str\\n\\turl: str\\n\\texpiry_date: str\\n\\tpassword: str\\n\\nshared_files = {}\\n\\n\\ndef share_file(data):\\n\\tshared_file = SharedFile(**data)\\n\\tshared_files[shared_file.name] = shared_file\\n\\treturn {'message': 'File shared successfully'}\\n\\ndef shared_folder(data):\\n\\treturn {'message': 'Folder shared successfully'}\"\n    },\n    {\n      \"file_path\": \"test_user_management.py\",\n      \"file_contents\": \"import pytest\\nimport user_management\\n\\ndef test_register():\\n\\tdata = {'name': 'Test', 'email': 'test@test.com', 'password': 'test', 'profile_picture': '', 'storage_used': 0, 'storage_remaining': 1000}\\n\\tresponse = user_management.register(data)\\n\\tassert response == {'message': 'User registered successfully'}\\n\\ndef test_login():\\n\\tdata = {'email': 'test@test.com', 'password': 'test'}\\n\\tresponse = user_management.login(data)\\n\\tassert response == {'message': 'Login successful'}\\n\\ndef test_forgot_password():\\n\\tdata = {'email': 'test@test.com', 'new_password': 'new_test'}\\n\\tresponse = user_management.forgot_password(data)\\n\\tassert response == {'message': 'Password reset successful'}\\n\\ndef test_profile():\\n\\tdata = {'email': 'test@test.com'}\\n\\tresponse = user_management.profile(data)\\n\\tassert 'name' in response\\n\\ndef test_change_password():\\n\\tdata = {'email': 'test@test.com', 'old_password': 'new_test', 'new_password': 'test'}\\n\\tresponse = user_management.change_password(data)\\n\\tassert response == {'message': 'Password changed successfully'}\"\n    },\n    {\n      \"file_path\": \"test_file_management.py\",\n      \"file_contents\": \"import pytest\\nimport file_management\\n\\ndef test_upload_file():\\n\\tdata = {'name': 'Test', 'type': 'txt', 'size': 1, 'versions': []}\\n\\tresponse = file_management.upload_file(data)\\n\\tassert response == {'message': 'File uploaded successfully'}\\n\\ndef test_download_file():\\n\\tdata = {'name': 'Test'}\\n\\tresponse = file_management.download_file(data)\\n\\tassert 'name' in response\\n\\ndef test_organize_file():\\n\\tdata = {'name': 'Test', 'new_name': 'NewTest'}\\n\\tresponse = file_management.organize_file(data)\\n\\tassert response == {'message': 'File organized successfully'}\\n\\ndef test_version_file():\\n\\tdata = {'name': 'Test'}\\n\\tresponse = file_management.version_file(data)\\n\\tassert 'versions' in response\"\n    },\n    {\n      \"file_path\": \"test_file_sharing.py\",\n      \"file_contents\": \"import pytest\\nimport file_sharing\\n\\ndef test_share_file():\\n\\tdata = {'name': 'Test', 'url': 'http://test.com', 'expiry_date': '2022-12-31', 'password': 'test'}\\n\\tresponse = file_sharing.share_file(data)\\n\\tassert response == {'message': 'File shared successfully'}\\n\\ndef test_shared_folder():\\n\\tdata = {}\\n\\tresponse = file_sharing.shared_folder(data)\\n\\tassert response == {'message': 'Folder shared successfully'}\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1481, "completion_tokens": 1858, "total_tokens": 3339}}]