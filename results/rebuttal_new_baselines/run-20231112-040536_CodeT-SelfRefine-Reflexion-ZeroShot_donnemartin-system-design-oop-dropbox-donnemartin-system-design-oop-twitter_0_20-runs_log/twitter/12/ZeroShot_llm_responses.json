[{"id": "chatcmpl-8K2Mq1SiJLtR2DqMwZgfgyUV0fbmC", "object": "chat.completion", "created": 1699786352, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\nfrom typing import Dict\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nusers = {}\\nposts = {}\\n\\n@dataclass\\nclass User:\\n\\tid: int\\n\\tusername: str\\n\\temail: str\\n\\tpassword: str\\n\\tprofile: Dict = None\\n\\n@dataclass\\nclass Post:\\n\\tid: int\\n\\tuser_id: int\\n\\tcontent: str\\n\\tlikes: int = 0\\n\\tretweets: int = 0\\n\\treplies: int = 0\\n\\n@app.route('/register', methods=['POST'])\\ndef register():\\n\\tdata = request.get_json()\\n\\tuser = User(**data)\\n\\tusers[user.id] = user\\n\\treturn jsonify(user), 201\\n\\n@app.route('/login', methods=['POST'])\\ndef login():\\n\\tdata = request.get_json()\\n\\tuser = users.get(data['id'])\\n\\tif user and user.password == data['password']:\\n\\t\\treturn jsonify(user), 200\\n\\treturn {'message': 'Invalid credentials'}, 401\\n\\n@app.route('/post', methods=['POST'])\\ndef post():\\n\\tdata = request.get_json()\\n\\tpost = Post(**data)\\n\\tposts[post.id] = post\\n\\treturn jsonify(post), 201\\n\\n@app.route('/like', methods=['POST'])\\ndef like():\\n\\tdata = request.get_json()\\n\\tpost = posts.get(data['post_id'])\\n\\tif post:\\n\\t\\tpost.likes += 1\\n\\t\\treturn jsonify(post), 200\\n\\treturn {'message': 'Post not found'}, 404\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nfrom flask import json\\n\\n@pytest.fixture\\ndef client():\\n\\tapp.app.config['TESTING'] = True\\n\\twith app.app.test_client() as client:\\n\\t\\tyield client\\n\\n\\ndef test_register(client):\\n\\tresponse = client.post('/register', json={'id': 1, 'username': 'test', 'email': 'test@test.com', 'password': 'test'})\\n\\tassert response.status_code == 201\\n\\tassert json.loads(response.data) == {'id': 1, 'username': 'test', 'email': 'test@test.com', 'password': 'test', 'profile': None}\\n\\n\\ndef test_login(client):\\n\\tresponse = client.post('/login', json={'id': 1, 'password': 'test'})\\n\\tassert response.status_code == 200\\n\\tassert json.loads(response.data) == {'id': 1, 'username': 'test', 'email': 'test@test.com', 'password': 'test', 'profile': None}\\n\\n\\ndef test_post(client):\\n\\tresponse = client.post('/post', json={'id': 1, 'user_id': 1, 'content': 'Hello, world!'})\\n\\tassert response.status_code == 201\\n\\tassert json.loads(response.data) == {'id': 1, 'user_id': 1, 'content': 'Hello, world!', 'likes': 0, 'retweets': 0, 'replies': 0}\\n\\n\\ndef test_like(client):\\n\\tresponse = client.post('/like', json={'post_id': 1})\\n\\tassert response.status_code == 200\\n\\tassert json.loads(response.data) == {'id': 1, 'user_id': 1, 'content': 'Hello, world!', 'likes': 1, 'retweets': 0, 'replies': 0}\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1507, "completion_tokens": 851, "total_tokens": 2358}}]