[{"id": "chatcmpl-8K0gNURehAeopSUikukd11vh8ESq3", "object": "chat.completion", "created": 1699779875, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\nfrom typing import Dict\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nDATABASE = {}\\n\\n@dataclass\\nclass User:\\n\\tname: str\\n\\temail: str\\n\\tclubs: Dict[str, 'Club']\\n\\n@dataclass\\nclass Club:\\n\\tname: str\\n\\tdescription: str\\n\\tis_private: bool\\n\\tmembers: Dict[str, User]\\n\\n@app.route('/create_user', methods=['POST'])\\ndef create_user():\\n\\tdata = request.get_json()\\n\\tuser = User(name=data['name'], email=data['email'], clubs={})\\n\\tDATABASE[data['email']] = user\\n\\treturn jsonify({'message': 'User created successfully'}), 201\\n\\n@app.route('/create_club', methods=['POST'])\\ndef create_club():\\n\\tdata = request.get_json()\\n\\tclub = Club(name=data['name'], description=data['description'], is_private=data['is_private'], members={})\\n\\tDATABASE[data['creator_email']].clubs[data['name']] = club\\n\\treturn jsonify({'message': 'Club created successfully'}), 201\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nfrom flask import json\\n\\n@pytest.fixture\\ndef client():\\n\\tapp.app.config['TESTING'] = True\\n\\twith app.app.test_client() as client:\\n\\t\\tyield client\\n\\n\\ndef test_create_user(client):\\n\\tresponse = client.post('/create_user', data=json.dumps({'name': 'Test User', 'email': 'test@example.com'}), content_type='application/json')\\n\\tassert response.status_code == 201\\n\\tassert response.get_json()['message'] == 'User created successfully'\\n\\n\\ndef test_create_club(client):\\n\\tclient.post('/create_user', data=json.dumps({'name': 'Test User', 'email': 'test@example.com'}), content_type='application/json')\\n\\tresponse = client.post('/create_club', data=json.dumps({'name': 'Test Club', 'description': 'This is a test club', 'is_private': False, 'creator_email': 'test@example.com'}), content_type='application/json')\\n\\tassert response.status_code == 201\\n\\tassert response.get_json()['message'] == 'Club created successfully'\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1597, "completion_tokens": 566, "total_tokens": 2163}}]