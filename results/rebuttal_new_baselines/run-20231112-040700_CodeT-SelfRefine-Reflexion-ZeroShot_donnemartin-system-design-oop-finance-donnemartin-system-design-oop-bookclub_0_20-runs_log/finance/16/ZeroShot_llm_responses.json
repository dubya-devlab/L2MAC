[{"id": "chatcmpl-8K0LpNcO1HQscOvP4Nr7cAXlRWzaV", "object": "chat.completion", "created": 1699778601, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\nfrom typing import Dict\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nusers_db = {}\\n\\n@dataclass\\nclass User:\\n\\tusername: str\\n\\tpassword: str\\n\\n@app.route('/create_account', methods=['POST'])\\ndef create_account():\\n\\tdata = request.get_json()\\n\\tusername = data['username']\\n\\tpassword = data['password']\\n\\tif username in users_db:\\n\\t\\treturn jsonify({'message': 'Username already exists'}), 400\\n\\tuser = User(username, password)\\n\\tusers_db[username] = user\\n\\treturn jsonify({'message': 'Account created successfully'}), 201\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\n\\n@pytest.fixture\\ndef client():\\n\\tapp.app.config['TESTING'] = True\\n\\twith app.app.test_client() as client:\\n\\t\\tyield client\\n\\n\\ndef test_create_account(client):\\n\\tresponse = client.post('/create_account', json={'username': 'test', 'password': 'test'})\\n\\tassert response.status_code == 201\\n\\tassert response.get_json() == {'message': 'Account created successfully'}\\n\\n\\t# Test creating account with existing username\\n\\tresponse = client.post('/create_account', json={'username': 'test', 'password': 'test'})\\n\\tassert response.status_code == 400\\n\\tassert response.get_json() == {'message': 'Username already exists'}\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1660, "completion_tokens": 391, "total_tokens": 2051}}]