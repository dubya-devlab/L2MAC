[{"id": "chatcmpl-8KHj2nd494xeK92avdvJOw182tNZZ", "object": "chat.completion", "created": 1699845388, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "\n{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\nfrom typing import Dict\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nusers = {}\\nclubs = {}\\nmeetings = {}\\ndiscussions = {}\\n\\n\\n@dataclass\\nclass User:\\n\\tid: str\\n\\tname: str\\n\\tclubs: Dict[str, 'Club']\\n\\t\\n\\tdef to_dict(self):\\n\\t\\treturn {\\n\\t\\t\\t'id': self.id,\\n\\t\\t\\t'name': self.name,\\n\\t\\t\\t'clubs': {club_id: club.to_dict() for club_id, club in self.clubs.items()}\\n\\t\\t}\\n\\n\\n@dataclass\\nclass Club:\\n\\tid: str\\n\\tname: str\\n\\tcreator: User\\n\\tmembers: Dict[str, User]\\n\\t\\n\\tdef to_dict(self):\\n\\t\\treturn {\\n\\t\\t\\t'id': self.id,\\n\\t\\t\\t'name': self.name,\\n\\t\\t\\t'creator': self.creator.id,\\n\\t\\t\\t'members': [user.id for user in self.members.values()]\\n\\t\\t}\\n\\n\\n@app.route('/users', methods=['POST'])\\ndef create_user():\\n\\tdata = request.get_json()\\n\\tuser = User(id=data['id'], name=data['name'], clubs={})\\n\\tusers[user.id] = user\\n\\treturn jsonify(user.to_dict()), 201\\n\\n\\n@app.route('/clubs', methods=['POST'])\\ndef create_club():\\n\\tdata = request.get_json()\\n\\tcreator = users[data['creator']]\\n\\tclub = Club(id=data['id'], name=data['name'], creator=creator, members={creator.id: creator})\\n\\tclubs[club.id] = club\\n\\tcreator.clubs[club.id] = club\\n\\treturn jsonify(club.to_dict()), 201\\n\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nfrom flask import json\\n\\n\\ndef test_create_user():\\n\\tapp.users = {}\\n\\tresponse = app.app.test_client().post('/users', data=json.dumps({'id': '1', 'name': 'Alice'}), content_type='application/json')\\n\\tassert response.status_code == 201\\n\\tassert response.get_json() == {'id': '1', 'name': 'Alice', 'clubs': {}}\\n\\tassert '1' in app.users\\n\\n\\ndef test_create_club():\\n\\tapp.users = {'1': app.User(id='1', name='Alice', clubs={})}\\n\\tresponse = app.app.test_client().post('/clubs', data=json.dumps({'id': '1', 'name': 'Book Club', 'creator': '1'}), content_type='application/json')\\n\\tassert response.status_code == 201\\n\\tassert response.get_json() == {'id': '1', 'name': 'Book Club', 'creator': '1', 'members': ['1']}\\n\\tassert '1' in app.clubs\\n\\tassert '1' in app.users['1'].clubs\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1326, "completion_tokens": 723, "total_tokens": 2049}}]