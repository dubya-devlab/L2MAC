[{"id": "chatcmpl-8KFEOTZaOq8t00Tl9UBSNzycqFqap", "object": "chat.completion", "created": 1699835800, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nusers = {}\\nclubs = {}\\nmeetings = {}\\ndiscussions = {}\\n\\n\\n@dataclass\\nclass User:\\n\\tid: str\\n\\tname: str\\n\\tclubs: list\\n\\treading_list: list\\n\\trecommendations: list\\n\\n\\n@dataclass\\nclass Club:\\n\\tid: str\\n\\tname: str\\n\\tmembers: list\\n\\tprivacy: str\\n\\tadmin: str\\n\\n\\n@dataclass\\nclass Meeting:\\n\\tid: str\\n\\tclub_id: str\\n\\tdate: str\\n\\treminder: bool\\n\\n\\n@dataclass\\nclass Discussion:\\n\\tid: str\\n\\tclub_id: str\\n\\tbook: str\\n\\tcomments: list\\n\\n\\n@app.route('/user', methods=['POST'])\\ndef create_user():\\n\\tdata = request.get_json()\\n\\tuser = User(**data)\\n\\tusers[user.id] = user\\n\\treturn jsonify(user), 201\\n\\n\\n@app.route('/club', methods=['POST'])\\ndef create_club():\\n\\tdata = request.get_json()\\n\\tclub = Club(**data)\\n\\tclubs[club.id] = club\\n\\treturn jsonify(club), 201\\n\\n\\n@app.route('/meeting', methods=['POST'])\\ndef create_meeting():\\n\\tdata = request.get_json()\\n\\tmeeting = Meeting(**data)\\n\\tmeetings[meeting.id] = meeting\\n\\treturn jsonify(meeting), 201\\n\\n\\n@app.route('/discussion', methods=['POST'])\\ndef create_discussion():\\n\\tdata = request.get_json()\\n\\tdiscussion = Discussion(**data)\\n\\tdiscussions[discussion.id] = discussion\\n\\treturn jsonify(discussion), 201\\n\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nfrom app import User, Club, Meeting, Discussion\\n\\n\\ndef test_create_user():\\n\\tuser = User(id='1', name='John Doe', clubs=[], reading_list=[], recommendations=[])\\n\\tapp.users[user.id] = user\\n\\tassert app.users[user.id] == user\\n\\n\\ndef test_create_club():\\n\\tclub = Club(id='1', name='Book Club', members=[], privacy='public', admin='1')\\n\\tapp.clubs[club.id] = club\\n\\tassert app.clubs[club.id] == club\\n\\n\\ndef test_create_meeting():\\n\\tmeeting = Meeting(id='1', club_id='1', date='2022-12-31', reminder=False)\\n\\tapp.meetings[meeting.id] = meeting\\n\\tassert app.meetings[meeting.id] == meeting\\n\\n\\ndef test_create_discussion():\\n\\tdiscussion = Discussion(id='1', club_id='1', book='Book 1', comments=[])\\n\\tapp.discussions[discussion.id] = discussion\\n\\tassert app.discussions[discussion.id] == discussion\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1326, "completion_tokens": 714, "total_tokens": 2040}}]