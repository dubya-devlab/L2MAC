[{"id": "chatcmpl-8KFWgwW6XSmrFqCft8SwfJwr04abi", "object": "chat.completion", "created": 1699836934, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request\\nfrom dataclasses import dataclass\\nimport json\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nDATABASE = {}\\n\\n@dataclass\\nclass User:\\n\\tid: str\\n\\tname: str\\n\\tclubs: list\\n\\tfollows: list\\n\\n@dataclass\\nclass Club:\\n\\tid: str\\n\\tname: str\\n\\tmembers: list\\n\\tprivacy: str\\n\\n@dataclass\\nclass Meeting:\\n\\tid: str\\n\\tclub_id: str\\n\\tdate: str\\n\\n@app.route('/create_user', methods=['POST'])\\ndef create_user():\\n\\tdata = request.get_json()\\n\\tuser = User(**data)\\n\\tDATABASE['users'][user.id] = user\\n\\treturn json.dumps(user.__dict__), 200\\n\\n@app.route('/create_club', methods=['POST'])\\ndef create_club():\\n\\tdata = request.get_json()\\n\\tclub = Club(**data)\\n\\tDATABASE['clubs'][club.id] = club\\n\\treturn json.dumps(club.__dict__), 200\\n\\n@app.route('/join_club', methods=['POST'])\\ndef join_club():\\n\\tdata = request.get_json()\\n\\tuser_id = data['user_id']\\n\\tclub_id = data['club_id']\\n\\tDATABASE['users'][user_id].clubs.append(club_id)\\n\\tDATABASE['clubs'][club_id].members.append(user_id)\\n\\treturn 'Joined club', 200\\n\\n@app.route('/schedule_meeting', methods=['POST'])\\ndef schedule_meeting():\\n\\tdata = request.get_json()\\n\\tmeeting = Meeting(**data)\\n\\tDATABASE['meetings'][meeting.id] = meeting\\n\\treturn json.dumps(meeting.__dict__), 200\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nimport json\\n\\n@pytest.fixture\\ndef client():\\n\\tapp.app.config['TESTING'] = True\\n\\twith app.app.test_client() as client:\\n\\t\\tyield client\\n\\n@pytest.fixture\\ndef reset_database():\\n\\tapp.DATABASE = {'users': {}, 'clubs': {}, 'meetings': {}}\\n\\ndef test_create_user(client, reset_database):\\n\\tresponse = client.post('/create_user', json={'id': '1', 'name': 'John', 'clubs': [], 'follows': []})\\n\\tassert response.status_code == 200\\n\\tassert json.loads(response.data) == {'id': '1', 'name': 'John', 'clubs': [], 'follows': []}\\n\\ndef test_create_club(client, reset_database):\\n\\tresponse = client.post('/create_club', json={'id': '1', 'name': 'Book Club', 'members': [], 'privacy': 'public'})\\n\\tassert response.status_code == 200\\n\\tassert json.loads(response.data) == {'id': '1', 'name': 'Book Club', 'members': [], 'privacy': 'public'}\\n\\ndef test_join_club(client, reset_database):\\n\\tclient.post('/create_user', json={'id': '1', 'name': 'John', 'clubs': [], 'follows': []})\\n\\tclient.post('/create_club', json={'id': '1', 'name': 'Book Club', 'members': [], 'privacy': 'public'})\\n\\tresponse = client.post('/join_club', json={'user_id': '1', 'club_id': '1'})\\n\\tassert response.status_code == 200\\n\\tassert response.data == b'Joined club'\\n\\ndef test_schedule_meeting(client, reset_database):\\n\\tresponse = client.post('/schedule_meeting', json={'id': '1', 'club_id': '1', 'date': '2022-12-31'})\\n\\tassert response.status_code == 200\\n\\tassert json.loads(response.data) == {'id': '1', 'club_id': '1', 'date': '2022-12-31'}\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1326, "completion_tokens": 920, "total_tokens": 2246}}]