[{"id": "chatcmpl-8JwoLPh3JoxlZO0u8iVLth6jwtdLU", "object": "chat.completion", "created": 1699764993, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\nimport json\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nusers = {}\\nmessages = {}\\n\\n@dataclass\\nclass User:\\n\\tname: str\\n\\temail: str\\n\\tpassword: str\\n\\tprofile_picture: str = None\\n\\tstatus_message: str = None\\n\\tprivacy_settings: dict = None\\n\\n@dataclass\\nclass Message:\\n\\tfrom_user: str\\n\\tto_user: str\\n\\tmessage: str\\n\\tread: bool = False\\n\\n@app.route('/signup', methods=['POST'])\\ndef signup():\\n\\tdata = request.get_json()\\n\\tuser = User(**data)\\n\\tusers[user.email] = user\\n\\treturn jsonify({'message': 'User created'}), 201\\n\\n@app.route('/login', methods=['POST'])\\ndef login():\\n\\tdata = request.get_json()\\n\\tuser = users.get(data['email'])\\n\\tif user and user.password == data['password']:\\n\\t\\treturn jsonify({'message': 'Logged in'}), 200\\n\\treturn jsonify({'message': 'Invalid credentials'}), 401\\n\\n@app.route('/message', methods=['POST'])\\ndef send_message():\\n\\tdata = request.get_json()\\n\\tmessage = Message(**data)\\n\\tmessages.setdefault(message.from_user, []).append(message)\\n\\treturn jsonify({'message': 'Message sent'}), 201\\n\\n@app.route('/message', methods=['GET'])\\ndef get_messages():\\n\\tfrom_user = request.args.get('from_user')\\n\\tto_user = request.args.get('to_user')\\n\\tuser_messages = messages.get(from_user, [])\\n\\treturn jsonify([message for message in user_messages if message.to_user == to_user]), 200\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nimport json\\n\\n@pytest.fixture\\ndef client():\\n\\tapp.app.config['TESTING'] = True\\n\\twith app.app.test_client() as client:\\n\\t\\tyield client\\n\\ndef test_signup(client):\\n\\tresponse = client.post('/signup', json={'name': 'Test', 'email': 'test@test.com', 'password': 'test'})\\n\\tassert response.status_code == 201\\n\\tassert json.loads(response.data) == {'message': 'User created'}\\n\\n\\tresponse = client.post('/login', json={'email': 'test@test.com', 'password': 'test'})\\n\\tassert response.status_code == 200\\n\\tassert json.loads(response.data) == {'message': 'Logged in'}\\n\\n\\tresponse = client.post('/login', json={'email': 'test@test.com', 'password': 'wrong'})\\n\\tassert response.status_code == 401\\n\\tassert json.loads(response.data) == {'message': 'Invalid credentials'}\\n\\n\\tresponse = client.post('/message', json={'from_user': 'test@test.com', 'to_user': 'test2@test.com', 'message': 'Hello'})\\n\\tassert response.status_code == 201\\n\\tassert json.loads(response.data) == {'message': 'Message sent'}\\n\\n\\tresponse = client.get('/message?from_user=test@test.com&to_user=test2@test.com')\\n\\tassert response.status_code == 200\\n\\tassert len(json.loads(response.data)) == 1\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1378, "completion_tokens": 782, "total_tokens": 2160}}]