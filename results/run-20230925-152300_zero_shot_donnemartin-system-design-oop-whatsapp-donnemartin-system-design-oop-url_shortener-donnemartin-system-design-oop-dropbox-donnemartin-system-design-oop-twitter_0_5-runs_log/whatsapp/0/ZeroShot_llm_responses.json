[{"id": "chatcmpl-82gmCXOWd6dVMVBA9enx97PciaHhG", "object": "chat.completion", "created": 1695651780, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom user import User\\nfrom chat import Chat\\n\\napp = Flask(__name__)\\n\\nusers = {}\\nchats = {}\\n\\n@app.route('/register', methods=['POST'])\\ndef register():\\n\\tdata = request.get_json()\\n\\tuser = User(data['email'], data['password'])\\n\\tusers[user.id] = user\\n\\treturn jsonify(user.to_dict()), 201\\n\\n@app.route('/login', methods=['POST'])\\ndef login():\\n\\tdata = request.get_json()\\n\\tfor user in users.values():\\n\\t\\tif user.email == data['email'] and user.password == data['password']:\\n\\t\\t\\treturn jsonify(user.to_dict()), 200\\n\\treturn jsonify({'error': 'Invalid credentials'}), 401\\n\\n@app.route('/users/<user_id>/profile', methods=['PUT'])\\ndef update_profile(user_id):\\n\\tdata = request.get_json()\\n\\tuser = users.get(user_id)\\n\\tif user:\\n\\t\\tuser.update_profile(data)\\n\\t\\treturn jsonify(user.to_dict()), 200\\n\\treturn jsonify({'error': 'User not found'}), 404\\n\\n@app.route('/users/<user_id>/contacts', methods=['POST'])\\ndef add_contact(user_id):\\n\\tdata = request.get_json()\\n\\tuser = users.get(user_id)\\n\\tif user:\\n\\t\\tcontact = users.get(data['contact_id'])\\n\\t\\tif contact:\\n\\t\\t\\tuser.add_contact(contact)\\n\\t\\t\\treturn jsonify(user.to_dict()), 200\\n\\t\\treturn jsonify({'error': 'Contact not found'}), 404\\n\\treturn jsonify({'error': 'User not found'}), 404\\n\\n@app.route('/users/<user_id>/chats', methods=['POST'])\\ndef start_chat(user_id):\\n\\tdata = request.get_json()\\n\\tuser = users.get(user_id)\\n\\tif user:\\n\\t\\tchat = Chat(user)\\n\\t\\tchats[chat.id] = chat\\n\\t\\treturn jsonify(chat.to_dict()), 201\\n\\treturn jsonify({'error': 'User not found'}), 404\\n\\n@app.route('/chats/<chat_id>/messages', methods=['POST'])\\ndef send_message(chat_id):\\n\\tdata = request.get_json()\\n\\tchat = chats.get(chat_id)\\n\\tif chat:\\n\\t\\tmessage = chat.send_message(data['sender_id'], data['content'])\\n\\t\\treturn jsonify(message), 201\\n\\treturn jsonify({'error': 'Chat not found'}), 404\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"user.py\",\n      \"file_contents\": \"from uuid import uuid4\\n\\nclass User:\\n\\tdef __init__(self, email, password):\\n\\t\\tself.id = str(uuid4())\\n\\t\\tself.email = email\\n\\t\\tself.password = password\\n\\t\\tself.profile = {}\\n\\t\\tself.contacts = []\\n\\n\\tdef to_dict(self):\\n\\t\\treturn {\\n\\t\\t\\t'id': self.id,\\n\\t\\t\\t'email': self.email,\\n\\t\\t\\t'profile': self.profile,\\n\\t\\t\\t'contacts': [contact.id for contact in self.contacts]\\n\\t\\t}\\n\\n\\tdef update_profile(self, data):\\n\\t\\tself.profile.update(data)\\n\\n\\tdef add_contact(self, contact):\\n\\t\\tself.contacts.append(contact)\"\n    },\n    {\n      \"file_path\": \"chat.py\",\n      \"file_contents\": \"from uuid import uuid4\\n\\nclass Chat:\\n\\tdef __init__(self, user):\\n\\t\\tself.id = str(uuid4())\\n\\t\\tself.users = [user]\\n\\t\\tself.messages = []\\n\\n\\tdef to_dict(self):\\n\\t\\treturn {\\n\\t\\t\\t'id': self.id,\\n\\t\\t\\t'users': [user.id for user in self.users],\\n\\t\\t\\t'messages': self.messages\\n\\t\\t}\\n\\n\\tdef send_message(self, sender_id, content):\\n\\t\\tmessage = {'sender_id': sender_id, 'content': content}\\n\\t\\tself.messages.append(message)\\n\\t\\treturn message\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"completion_tokens": 936, "prompt_tokens": 1344, "total_tokens": 2280}}]