[{"id": "chatcmpl-8JqZQtfTht2Ft8Edw4ElSmd1FXb3X", "object": "chat.completion", "created": 1699741004, "model": "gpt-4", "prompt_filter_results": [{"prompt_index": 0, "content_filter_results": {"hate": {"filtered": false, "severity": "safe"}, "self_harm": {"filtered": false, "severity": "safe"}, "sexual": {"filtered": false, "severity": "safe"}, "violence": {"filtered": false, "severity": "safe"}}}], "choices": [{"index": 0, "finish_reason": "stop", "message": {"role": "assistant", "function_call": {"name": "write_files", "arguments": "{\n  \"files_and_contents\": [\n    {\n      \"file_path\": \"app.py\",\n      \"file_contents\": \"from flask import Flask, request, jsonify\\nfrom dataclasses import dataclass\\n\\napp = Flask(__name__)\\n\\n# Mock database\\nDATABASE = {}\\n\\n@dataclass\\nclass User:\\n\\tname: str\\n\\temail: str\\n\\tbooks_read: list\\n\\tbooks_to_read: list\\n\\tclubs_joined: list\\n\\n@dataclass\\nclass BookClub:\\n\\tname: str\\n\\tdescription: str\\n\\tis_private: bool\\n\\tmembers: list\\n\\tbooks: list\\n\\n@app.route('/create_user', methods=['POST'])\\ndef create_user():\\n\\tdata = request.get_json()\\n\\tuser = User(**data)\\n\\tDATABASE[user.email] = user\\n\\treturn jsonify({'message': 'User created successfully'}), 201\\n\\n@app.route('/create_club', methods=['POST'])\\ndef create_club():\\n\\tdata = request.get_json()\\n\\tclub = BookClub(**data)\\n\\tDATABASE[club.name] = club\\n\\treturn jsonify({'message': 'Book club created successfully'}), 201\\n\\nif __name__ == '__main__':\\n\\tapp.run(debug=True)\"\n    },\n    {\n      \"file_path\": \"test_app.py\",\n      \"file_contents\": \"import pytest\\nimport app\\nfrom flask import json\\n\\n@pytest.fixture\\ndef client():\\n\\tapp.app.config['TESTING'] = True\\n\\twith app.app.test_client() as client:\\n\\t\\tyield client\\n\\n\\ndef test_create_user(client):\\n\\tresponse = client.post('/create_user', json={\\n\\t\\t'name': 'Test User',\\n\\t\\t'email': 'test@example.com',\\n\\t\\t'books_read': [],\\n\\t\\t'books_to_read': [],\\n\\t\\t'clubs_joined': []\\n\\t})\\n\\tassert response.status_code == 201\\n\\tassert json.loads(response.data) == {'message': 'User created successfully'}\\n\\n\\ndef test_create_club(client):\\n\\tresponse = client.post('/create_club', json={\\n\\t\\t'name': 'Test Club',\\n\\t\\t'description': 'This is a test club',\\n\\t\\t'is_private': False,\\n\\t\\t'members': [],\\n\\t\\t'books': []\\n\\t})\\n\\tassert response.status_code == 201\\n\\tassert json.loads(response.data) == {'message': 'Book club created successfully'}\"\n    }\n  ]\n}"}}, "content_filter_results": {}}], "usage": {"prompt_tokens": 1727, "completion_tokens": 554, "total_tokens": 2281}}]